/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1beta1

import (
	rest "k8s.io/client-go/rest"
)

// EvictionsGetter has a method to return a EvictionInterface.
// A group's client should implement this interface.
type EvictionsGetter interface {
	Evictions(namespace string) EvictionInterface
}

type ScopedEvictionsGetter interface {
	ScopedEvictions(scope rest.Scope) EvictionsGetter
}

// EvictionInterface has methods to work with Eviction resources.
type EvictionInterface interface {
	EvictionExpansion
}

type evictionsScoper struct {
	client *PolicyV1beta1Client
	scope  rest.Scope
}

func newEvictionsScoper(c *PolicyV1beta1Client, scope rest.Scope) *evictionsScoper {
	return &evictionsScoper{
		client: c,
		scope:  scope,
	}
}

func (s *evictionsScoper) Evictions(namespace string) EvictionInterface {
	return newEvictions(s.client, s.scope, namespace)
}

// evictions implements EvictionInterface
type evictions struct {
	client rest.Interface
	scope  rest.Scope
	ns     string
}

// newEvictions returns a Evictions
func newEvictions(c *PolicyV1beta1Client, scope rest.Scope, namespace string) *evictions {
	return &evictions{
		client: c.RESTClient(),
		scope:  scope,
		ns:     namespace,
	}
}
